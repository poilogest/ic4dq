import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import numpy as np

x = [0.04, 0.06, 0.08, 0.10, 0.12, 0.14, 0.16, 0.18, 0.20]
# Model Accuracy
# y1 = [0.9801336999999997, 0.9604180716000019, 0.9407024431999994, 0.921004810062870, 0.920140850057833, 0.920105505996153, 0.920107082990516, 0.920169636690205, 0.920143169400883, 0.920174372746283, 0.920128402900010] # NE linear
# y2 = [0.9793319599999997, 0.9764606748640005, 0.9731016278559999, 0.9692548189759985, 0.9649202482240007, 0.9600979156000012, 0.9547878211040012, 0.9489899647360004, 0.9427043464960007, 0.937881363749921, 0.937866530484134] # NE quadratic
# y3 = [0.9801336999999997, 0.9681262972065344, 0.9681323346202404, 0.9681340984960505,0.9681330604327438, 0.9681338225600628, 0.9681300483655566, 0.9681389762184252, 0.9681300658893857, 0.9681330951225648, 0.968130042175436] # SWM linear
# y4 = [0.9793319599999997, 0.9764615471959911, 0.9731022743727316, 0.9694622286643351, 0.969454758998938, 0.9694608451175997, 0.9694544332122987, 0.969452364516122, 0.9694577992980318, 0.9694527952444807, 0.9694499159121865] # SWM quadratic
# y5 = [0.9801336999999997, 0.9604235926380416, 0.9407068144033685, 0.9352501923481475, 0.9352563809147065, 0.9352496802476371, 0.9352453970427106, 0.9352466023556528, 0.9352333593128661, 0.9352409452510309, 0.9352397291494293] # NE2 linear
# y6 = [0.9793319599999997, 0.9764615471959911, 0.9731022743727316, 0.9692561316120597, 0.9649214437658745, 0.9609935873384664, 0.9609874810206251, 0.9609772303924966, 0.9609847987896145, 0.9609839564809838, 0.9609815228506551] # NE2 quadratic

#cifar10
# y1 = [0.9156811200000011, 0.8958215212000007, 0.875961922399999, 0.856190875667230, 0.855671384492775, 0.855669253915847, 0.855670968337061, 0.855700582671377, 0.855720336699797, 0.855656812723649, 0.855663705629359]  # NE linear
# y2 = [0.8867697299999986, 0.8848571808640018, 0.8815191118559988, 0.8767555229759988, 0.8705664142240007, 0.8629517856000022, 0.853912138279888, 0.853104215558856, 0.853135489060025, 0.853121201455398, 0.853115309435485]  # NE quadratic
# y3 = [0.9156811200000011, 0.9036847814932856, 0.9036905775829461, 0.9036864634988947, 0.9036811884385538, 0.903681576959837, 0.9036806531074507, 0.9036720454433206, 0.9036823788759967, 0.9036761769846312, 0.9036795986723004]  # SWM linear
# y4 = [0.8867697299999986, 0.8848579159828076, 0.8815203221356381, 0.8792573083703005, 0.8792633027502731, 0.8792637625936528, 0.879267435222511, 0.8792638332853591, 0.8792643206330873, 0.8792658310643847,  0.8792662756759217]  # SWM quadratic
# y5 = [0.9156811200000011, 0.8958270825545899, 0.8759664531011735, 0.8706848293018881, 0.8706878953599941, 0.8706719858841128, 0.8706891052815642, 0.8706622964824687, 0.8707042576958476, 0.8706766281071013, 0.8706801186968317]  # NE2 linear
# y6 = [0.8867697299999986, 0.8848579159828076, 0.8815198387308772, 0.8767572802077992, 0.8705679946160595, 0.8688461383082797, 0.8688505070065555, 0.8688453567989137, 0.8688554853071021, 0.8688553940969449, 0.8688506118013649]  # NE2 quadratic

# fmnist
# y1 = [0.8672730518326207, 0.8496396638000006, 0.8320061876000008, 0.8143727113999987, 0.807283275006805, 0.807276141113266, 0.807290460814476, 0.807247778984095, 0.807232446535908, 0.807306963322992, 0.807288183435987]  # NE linear
# y2 = [0.8856971259556679, 0.8881929852319996, 0.8892983373280002, 0.8890131662879993, 0.8873374721119993, 0.884271254799999, 0.8798145143520011, 0.8739672507680001, 0.868172368569495, 0.868174195685264, 0.868161981370894]  # NE
# y3 = [0.8672731399999996, 0.8552626897076763, 0.8552744921037211, 0.8552772413214913, 0.8552739369325433, 0.8552808439774171, 0.8552720769668433, 0.8552701238516307, 0.8552749792249221, 0.8552705968012729, 0.8552728109123945]  # SWM linear
# y4 = [0.8856971099999994, 0.888192480945183,  0.8892982637172376, 0.8890134808273596, 0.8873381244089411, 0.8865587417518174, 0.8865583894397343, 0.8865595046063304, 0.8865580819028384, 0.8865629615364216, 0.8865602065952214]  # SWM
# y5 = [0.8672731399999996, 0.8496446017655047, 0.8320114392559919, 0.8242995107762953, 0.8242978683154165, 0.8243126840706917, 0.8243031214188821, 0.8242956656609501, 0.8243172062353499, 0.8243186408357428, 0.8242873143090236]  # NE2 linear
# y6 = [0.8856971099999994, 0.888192480945183, 0.8892982637172376, 0.8890134808273596, 0.8873380911857497, 0.884272498023734, 0.8811521424777924, 0.8811536734037735, 0.8811521989434068, 0.8811503572550318, 0.8811564888877755]  # NE2

y1 = [ 0.8320061876000008, 0.8143727113999987, 0.807283275006805, 0.807276141113266, 0.807290460814476, 0.807247778984095, 0.807232446535908, 0.807306963322992, 0.807288183435987]  # NE linear
y2 = [ 0.8892983373280002, 0.8890131662879993, 0.8873374721119993, 0.884271254799999, 0.8798145143520011, 0.8739672507680001, 0.868172368569495, 0.868174195685264, 0.868161981370894]  # NE
y3 = [ 0.8552744921037211, 0.8552772413214913, 0.8552739369325433, 0.8552808439774171, 0.8552720769668433, 0.8552701238516307, 0.8552749792249221, 0.8552705968012729, 0.8552728109123945]  # SWM linear
y4 = [ 0.8892982637172376, 0.8890134808273596, 0.8873381244089411, 0.8865587417518174, 0.8865583894397343, 0.8865595046063304, 0.8865580819028384, 0.8865629615364216, 0.8865602065952214]  # SWM
y5 = [ 0.8320114392559919, 0.8242995107762953, 0.8242978683154165, 0.8243126840706917, 0.8243031214188821, 0.8242956656609501, 0.8243172062353499, 0.8243186408357428, 0.8242873143090236]  # NE2 linear
y6 = [ 0.8892982637172376, 0.8890134808273596, 0.8873380911857497, 0.884272498023734, 0.8811521424777924, 0.8811536734037735, 0.8811521989434068, 0.8811503572550318, 0.8811564888877755]  # NE2

fig, ax = plt.subplots()
plt.figure(figsize=(10, 9))
plt.plot(x, y1, label="NE: Random Flipping", color="#F82817", marker='^', markersize=15, linestyle="--")
plt.plot(x, y2, label="NE: Instance Dependent", color="#F6B217", marker='^', markersize=15, linestyle="-")
plt.plot(x, y3, label="SWM: Random Flipping", color="#1786F6", marker='o', markersize=14, linestyle="--")
plt.plot(x, y4, label="SWM: Instance Dependent", color="#B14BF2", marker='o', markersize=14, linestyle="-")
plt.plot(x, y5, label="NE-INC: Random Flipping", color="#DB7093", marker='P', markersize=15, linestyle="--")
plt.plot(x, y6, label="NE-INC: Instance Dependent", color="#3CB371", marker='P', markersize=15, linestyle="-")

# plt.figure(figsize=(12, 10))
# y5 = []  # SWM/NE linear
# y6 = []  # SWM/NE quadratic
# for i in range(len(y1)):
#     y5.append(y3[i] / y1[i])
#     y6.append(y4[i] / y2[i])
# plt.plot(x, y5, label="Random Flipping: SWM/NE", color="#C83124", marker='o', markersize=16, linestyle="-")
# plt.plot(x, y6, label="Instance Dependent: SWM/NE", color="#2179B6", marker='s', markersize=14, linestyle="-")

plt.grid(visible=True, alpha=0.3)
# plt.ylim(0.8, 0.9)
plt.legend(fontsize=15, loc='upper right', bbox_to_anchor=(1, 0.55))
plt.xlabel(r'$\epsilon$', fontsize=27)
plt.ylabel("Model Accuracy", fontsize=27)
fig.tight_layout(pad=0.5)
plt.tick_params(labelsize=23, direction='in')

# plt.legend(fontsize=19, loc='lower right')
# # plt.ylim(0, 0.2)
# plt.xlabel(r'$\epsilon$', fontsize=31)
# plt.ylabel("Price of Stability in Model Accuracy", fontsize=31)
# fig.tight_layout(pad=0.5)
# plt.tick_params(labelsize=24, direction='in')

plt.savefig("./model_accuracy_epsilon_fig_fmnist.pdf")
